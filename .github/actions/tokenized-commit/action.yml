name: "Tokenized Commit"
description: "Commits and pushes changes with a GitHub App token"

inputs:
  github_token:
    description: "GitHub token for authentication"
    required: true
  repository:
    description: "Repository name in the format 'owner/repo'"
    required: true
    default: "${{ github.repository }}"
  file_path:
    description: "Path to the pubspec.yaml file"
    required: true
    default: "apps/multichoice/pubspec.yaml"
  commit_message:
    description: "Commit message for the changes"
    required: true
    default: "Bump to $new_version [skip ci]"
  branch_name:
    description: "Branch name to push changes to"
    required: true
  version_with_build:
    description: "Version to set in the pubspec.yaml file"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout Branch
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch_name }}
        fetch-depth: 0
        token: ${{ inputs.github_token }}

    - name: Update Version in pubspec.yaml
      id: version_update
      shell: bash
      run: |
        new_version=${{ inputs.version_with_build }}

        # Validate version format
        if ! echo "$new_version" | grep -qE '^[0-9]+\.[0-9]+\.[0-9]+(-RC)?\+[0-9]+$'; then
          echo "::error::Invalid version format: $new_version. Expected format: x.y.z+build or x.y.z-RC+build"
          exit 1
        fi

        # Check if file exists
        if [[ ! -f "${{ inputs.file_path }}" ]]; then
          echo "::error::File not found: ${{ inputs.file_path }}"
          exit 1
        fi

        # Update pubspec.yaml with new version
        sed -i "s/version: .*/version: $new_version/" ${{ inputs.file_path }}
        
        # Verify the change was made
        if ! grep -q "version: $new_version" "${{ inputs.file_path }}"; then
          echo "::error::Failed to update version in ${{ inputs.file_path }}"
          exit 1
        fi
        
        echo "version_number=$new_version" >> $GITHUB_OUTPUT
        echo "version_number=$new_version"

    - name: Push Changes
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github_token }}
        REPO: ${{ inputs.repository }}
      run: |
        git config --global user.name 'VersionBumpingBot'
        git config --global user.email 'bot@versionbumpingbot.com'

        git add ${{ inputs.file_path }}
        git commit -m "${{ inputs.commit_message }}" || {
          echo "::error::Failed to commit changes"
          exit 1
        }
        echo "Git status: $(git status)"

        git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${REPO}.git
        git push origin HEAD:${{ inputs.branch_name }} || {
          echo "::error::Failed to push version bump to ${{ inputs.branch_name }}"
          exit 1
        }
