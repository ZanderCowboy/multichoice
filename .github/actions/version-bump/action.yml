name: "Version Bumper"
description: "Bumps semantic version based on PR labels and increments build number."

inputs:
  github-token:
    description: "GitHub token"
    required: true
  version-file:
    description: "Path to pubspec file"
    required: true

outputs:
  new-version:
    description: "New semantic version generated"
    value: ${{ steps.output.outputs.new-version }}

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install GitHub CLI (gh)
      shell: bash
      run: |
        (type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) \
          && sudo mkdir -p -m 755 /etc/apt/keyrings \
                && out=$(mktemp) && wget -nv -O$out https://cli.github.com/packages/githubcli-archive-keyring.gpg \
                && cat $out | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
          && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

    # - name: Set up Git
    #   shell: bash
    #   run: |
    #     git config user.name "github-actions[bot]"
    #     git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Run version bump script
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        VERSION_FILE: ${{ inputs.version-file }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
      run: |
        LABELS=$(gh pr view "$PR_NUMBER" --json labels -q '.labels[].name')

        BUMP_TYPE=""
        if echo "$LABELS" | grep -qi "major"; then
          BUMP_TYPE="major"
        elif echo "$LABELS" | grep -qi "minor"; then
          BUMP_TYPE="minor"
        elif echo "$LABELS" | grep -qi "patch"; then
          BUMP_TYPE="patch"
        else
          echo "No valid bump label found (major/minor/patch). Exiting."
          exit 0
        fi

        echo "Bump type identified: $BUMP_TYPE"

        CURRENT_VERSION=$(grep '^version:' $VERSION_FILE | sed 's/version: //')
        echo "Current version: $CURRENT_VERSION"

        SEMVER=$(echo "$CURRENT_VERSION" | cut -d '+' -f 1)
        echo "Semantic version: $SEMVER"
        BUILD_NUM=$(echo "$CURRENT_VERSION" | cut -d '+' -f 2)
        echo "Build number: $BUILD_NUM"

        MAJOR=$(echo "$SEMVER" | cut -d '.' -f 1)
        MINOR=$(echo "$SEMVER" | cut -d '.' -f 2)
        PATCH=$(echo "$SEMVER" | cut -d '.' -f 3)

        case $BUMP_TYPE in
          major)
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
            ;;
          minor)
            MINOR=$((MINOR + 1))
            PATCH=0
            ;;
          patch)
            PATCH=$((PATCH + 1))
            ;;
        esac

        echo "Old build number: $BUILD_NUM"
        BUILD_NUM=$(echo "$BUILD_NUM" | tr -d '\r\n[:space:]')
        BUILD_NUM=$((BUILD_NUM + 1))
        echo "Build number incremented to: $BUILD_NUM"

        NEW_VERSION="$MAJOR.$MINOR.$PATCH+$BUILD_NUM"
        echo "New version: $NEW_VERSION"
        echo "new-version=$NEW_VERSION" >> "$GITHUB_OUTPUT"
        echo "new-version=$NEW_VERSION" >> "$GITHUB_ENV"

        sed -i -E "s/^(version:[[:space:]]*).*/\1$NEW_VERSION/" $VERSION_FILE
