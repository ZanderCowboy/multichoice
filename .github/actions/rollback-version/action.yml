name: "Rollback Version"
description: "Rolls back version changes if deployment fails"

inputs:
  github_token:
    description: "GitHub token for authentication"
    required: true
  repository:
    description: "Repository name in the format 'owner/repo'"
    required: true
    default: "${{ github.repository }}"
  branch_name:
    description: "Branch name to rollback changes on"
    required: true
  previous_version:
    description: "Previous version to rollback to"
    required: true
  pubspec_path:
    description: "Path to the pubspec.yaml file"
    required: true
    default: "apps/multichoice/pubspec.yaml"
  rollback_reason:
    description: "Reason for rollback"
    required: false
    default: "Deployment failed"

runs:
  using: "composite"
  steps:
    - name: Checkout Branch
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch_name }}
        fetch-depth: 0
        token: ${{ inputs.github_token }}

    - name: Rollback Version
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github_token }}
        REPO: ${{ inputs.repository }}
      run: |
        previous_version="${{ inputs.previous_version }}"
        rollback_reason="${{ inputs.rollback_reason }}"
        
        # Validate previous version format
        if ! echo "$previous_version" | grep -qE '^[0-9]+\.[0-9]+\.[0-9]+(-RC)?\+[0-9]+$'; then
          echo "::error::Invalid previous version format: $previous_version"
          exit 1
        fi
        
        # Check if file exists
        if [[ ! -f "${{ inputs.pubspec_path }}" ]]; then
          echo "::error::File not found: ${{ inputs.pubspec_path }}"
          exit 1
        fi
        
        # Get current version
        current_version=$(grep 'version:' ${{ inputs.pubspec_path }} | sed 's/version:[[:space:]]*//')
        echo "Current version: $current_version"
        echo "Rolling back to: $previous_version"
        
        # Update pubspec.yaml with previous version
        sed -i "s/version: .*/version: $previous_version/" ${{ inputs.pubspec_path }}
        
        # Verify the change was made
        if ! grep -q "version: $previous_version" "${{ inputs.pubspec_path }}"; then
          echo "::error::Failed to rollback version in ${{ inputs.pubspec_path }}"
          exit 1
        fi
        
        git config --global user.name 'VersionBumpingBot'
        git config --global user.email 'bot@versionbumpingbot.com'
        
        git add ${{ inputs.pubspec_path }}
        git commit -m "Rollback version to $previous_version - $rollback_reason [skip ci]"
        
        git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${REPO}.git
        git push origin HEAD:${{ inputs.branch_name }}
        
        echo "âœ… Successfully rolled back version to $previous_version" 