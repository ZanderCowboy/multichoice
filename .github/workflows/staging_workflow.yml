---
# This workflow is triggered on pull request closure for branch 'rc'.
# It is responsible for building the Android app, running tests, and uploading artifacts.
# It also manages versioning based on labels applied to the pull request.
#
# The versioning works as follows:
# - If the pull request is merged and has labels 'major', 'minor', or 'patch', it will bump the version accordingly with -RC suffix.
#   For example, 1.0.0+5, and the label is 'minor', it will become 1.1.0-RC+6.
# - If the pull request is merged and has no labels, it will bump the build number only.
#   For example, if the current version is 1.0.0+5, it will become 1.0.0-RC+6.
# - If the pull request is merged and has the label 'no-build', it will skip the build process.
#
name: rc-workflow
on:
  pull_request:
    branches: [ "rc" ]
    types:
      - closed
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preBuild:
    name: Prebuild - Version Management
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'no-build') == false
    runs-on: ubuntu-latest
    concurrency:
      group: build-group
      cancel-in-progress: false
    outputs:
      version_number: ${{ steps.version_management.outputs.version_number }}
      android_build_flag: ${{ steps.id_out.outputs.android_build_flag }}
      android_environment_flag: ${{ steps.id_out.outputs.android_environment_flag }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate GitHub App Token
        id: generate_token
        uses: peter-murray/workflow-application-token-action@v4
        with:
          application_id: ${{ secrets.VERSION_BOT_APP_ID }}
          application_private_key: ${{ secrets.VERSION_BOT_APP_PRIVATE_KEY }}

      - name: Check Version Labels
        id: check_labels
        run: |
          LABELS='${{ toJson(github.event.pull_request.labels) }}'
          VALID_LABELS=$(echo "$LABELS" | jq -r '.[] | select(.name | IN("no-build","major","minor","patch")) | .name')
          if [[ -z "$VALID_LABELS" ]]; then
            echo "bump_type=none" >> $GITHUB_OUTPUT
            echo "********** Bumping build number only **********"
          else
            LABEL_COUNT=$(echo "$VALID_LABELS" | wc -l)
            # If multiple labels are found, error out
            if [[ $LABEL_COUNT -gt 1 ]]; then
              echo "::error::Multiple version labels found ($VALID_LABELS). Please use exactly one of: major, minor, patch, or neither"
              exit 1
            fi

            # Set the bump type based on the single valid label
            case "$VALID_LABELS" in
              "major") echo "bump_type=major" >> $GITHUB_OUTPUT ;;
              "minor") echo "bump_type=minor" >> $GITHUB_OUTPUT ;;
              "patch") echo "bump_type=patch" >> $GITHUB_OUTPUT ;;
            esac
          fi
        shell: bash

      - name: Version Management
        id: version_management
        uses: ./.github/actions/version-management
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
          pubspec_path: apps/multichoice/pubspec.yaml
          branch_name: rc
          bump_type: ${{ steps.check_labels.outputs.bump_type }}
          version_suffix: "-RC"

      - id: id_out
        run: |
          echo "version_number=${{ steps.version_management.outputs.version_number }}" >> $GITHUB_OUTPUT

  build:
    name: Builds Android App
    needs: [preBuild]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
      statuses: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Flutter and Java
        uses: ./.github/actions/setup-flutter-with-java

      - name: Melos Coverage for Core
        run: melos coverage:core
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: packages/core/coverage/lcov.info
          fail_ci_if_error: true

      - name: Download Android Keystore File
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2.4
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      - name: Create key.properties File
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> key.properties
        working-directory: apps/multichoice/android/
      - name: Create secrets.dart File
        run: |
          mkdir auth
          echo "String webApiKey = '${{ secrets.WEB_API_KEY }}';" > auth/secrets.dart
          echo "String webAppId = '${{ secrets.WEB_APP_ID }}';" >> auth/secrets.dart
          echo "String androidApiKey = '${{ secrets.ANDROID_API_KEY }}';" >> auth/secrets.dart
          echo "String androidAppId = '${{ secrets.ANDROID_APP_ID }}';" >> auth/secrets.dart
          echo "String iosApiKey = '${{ secrets.IOS_API_KEY }}';" >> auth/secrets.dart
          echo "String iosAppId = '${{ secrets.IOS_APP_ID }}';" >> auth/secrets.dart
        working-directory: apps/multichoice/lib/

      ##############################################
      # Build App Bundle
      ##############################################
      - name: Build App Bundle
        run: flutter build appbundle --release
        working-directory: apps/multichoice/

      ##############################################
      # Upload App Bundle as Artifact
      ##############################################
      - name: Upload Android App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: "android-release-appbundle"
          path: ./apps/multichoice/build/app/outputs/bundle/release/app-release.aab

      - name: Create New Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version_number=${{ needs.preBuild.outputs.version_number }}
          if [[ -z "$version_number" ]]; then
            echo "Error: version_number is empty"
            exit 1
          fi
          git tag v$version_number
          git push origin v$version_number

      ###############################################
      # Release to Google Play Internal Track
      ###############################################
      - name: Release Build to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          releaseFiles: app-release.aab
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: "co.za.zanderkotze.multichoice"
          track: "internal"
          releaseName: ${{ needs.preBuild.outputs.version_number }}
          status: "completed"
