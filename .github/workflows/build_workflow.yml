---
name: Test, Analyze, Build
on:
  pull_request:
    branches:
      - "develop"
    types:
      - "closed"

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preBuild:
    name: Prebuild - Bump build number
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'no-build') == false
    runs-on: ubuntu-latest
    concurrency:
      group: build-group
      cancel-in-progress: false
    outputs:
      version_number: ${{ steps.id_out.outputs.version }}
      android_build_flag: ${{ steps.id_out.outputs.android_build_flag }}
      android_environment_flag: ${{ steps.id_out.outputs.android_environment_flag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update version number and download
        id: id_updated_version
        uses: ./.github/actions/app-versioning
        with:
          bump-strategy: "none"
          file-path: "./apps/multichoice/pubspec.yaml"
          upload-filename: "pubspec-file"

      - name: read-config-file
        uses: actions-tools/yaml-outputs@v2
        id: read_config_yaml
        with:
          file-path: "${{ github.workspace }}/config.yml"

      - id: id_out
        run: |
          echo "version=${{ steps.id_updated_version.outputs.version-number }}" >> $GITHUB_OUTPUT
          # Returns a bool to determine if a build shoulbd be performed
          echo "android_build_flag=${{ steps.read_config_yaml.outputs.build__android_build_flag }}" >> $GITHUB_OUTPUT
          # "Release"
          echo "android_environment_flag=${{ steps.read_config_yaml.outputs.environment__android_environment_flag }}" >> $GITHUB_OUTPUT

      - name: Get pubspec.yaml version
        uses: actions/download-artifact@v4
        with:
          name: pubspec-file
          path: ${{ github.workspace }}/apps/multichoice/

  build:
    name: Builds Android App
    needs: [preBuild]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter and Java
        uses: ./.github/actions/setup-java-flutter

      - name: melos coverage:core
        run: melos coverage:core
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: packages/core/coverage/lcov.info
          fail_ci_if_error: true
      - name: Dart analysis
        uses: zgosalvez/github-actions-analyze-dart@v3
        with:
          working-directory: "${{github.workspace}}/"

      - name: Get pubspec.yaml
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.pubspec_filename }}
          path: ${{ github.workspace }}/apps/multichoice/
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2.4
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> key.properties
        working-directory: apps/multichoice/android/
      - name: Create secrets.dart
        run: |
          mkdir auth
          echo "String webApiKey = '${{ secrets.WEB_API_KEY }}';" > auth/secrets.dart
          echo "String webAppId = '${{ secrets.WEB_APP_ID }}';" >> auth/secrets.dart
          echo "String androidApiKey = '${{ secrets.ANDROID_API_KEY }}';" >> auth/secrets.dart
          echo "String androidAppId = '${{ secrets.ANDROID_APP_ID }}';" >> auth/secrets.dart
          echo "String iosApiKey = '${{ secrets.IOS_API_KEY }}';" >> auth/secrets.dart
          echo "String iosAppId = '${{ secrets.IOS_APP_ID }}';" >> auth/secrets.dart
        working-directory: apps/multichoice/lib/

      - name: Start appbundle release build
        run: flutter build appbundle --release
        working-directory: apps/multichoice/
      - name: Start apk release build
        run: flutter build apk --release
        working-directory: apps/multichoice/

      - name: Upload Android release appbundle
        uses: actions/upload-artifact@v4
        with:
          name: "android-release"
          path: ./apps/multichoice/build/app/outputs/bundle/release/app-release.aab
      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: ./apps/multichoice/build/app/outputs/flutter-apk/app-release.apk
          releaseNotesFile: ./CHANGELOG.md
          debug: true

  post-build:
    name: Post Build
    needs: [build, preBuild]
    runs-on: ubuntu-latest
    concurrency:
      group: post-build-group
      cancel-in-progress: false
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Call Auto Commit Version action
        uses: ./.github/actions/auto-commit-version
        with:
          version_number: ${{ needs.preBuild.outputs.version_number }}
          download_filename: "pubspec-file"
