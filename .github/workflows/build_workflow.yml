---
name: Test, Analyze, Build
on:
  push:
    branches:
      - "develop"
  pull_request:
    branches:
      - "develop"
    types:
      - "opened"
      - "synchronize"
      - "reopened"
      - "ready_for_review"

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter
        uses: ./.github/actions/setup-flutter

      - name: melos test all
        run: melos test:all

  analyze:
    name: Analyze
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    needs: test

    permissions:
      contents: read
      packages: read
      statuses: write

    steps:
      - run: echo "Starting analyze"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter
        uses: ./.github/actions/setup-flutter

      - name: ⚠️ℹ️ Run Dart analysis
        uses: zgosalvez/github-actions-analyze-dart@v3
        with:
          working-directory: "${{github.workspace}}/"

      # - name: Super-linter
      #   uses: super-linter/super-linter@v6.0.0
      #   env:
      #     DEFAULT_BRANCH: main
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     IGNORE_GITIGNORED_FILES: true
      #     FILTER_REGEX_EXCLUDE: "\\.freezed\\.dart$"
      #     CREATE_LOG_FILE: true
      #     DISABLE_ERRORS: true

  preBuild:
    name: Bump build number
    runs-on: ubuntu-latest
    concurrency:
      group: build-group
      cancel-in-progress: false
    outputs:
      version_number: ${{ steps.id_out.outputs.version }}
      web_build_flag: ${{ steps.id_out.outputs.web_build_flag }}
      android_build_flag: ${{ steps.id_out.outputs.android_build_flag }}
      windows_build_flag: ${{ steps.id_out.outputs.windows_build_flag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update version number and download
        id: id_updated_version
        uses: ./.github/actions/app-versioning
        with:
          bump-strategy: "none"
          file-path: "./apps/multichoice/pubspec.yaml"
          upload-filename: "pubspec-file"

      - name: read-config-file
        uses: actions-tools/yaml-outputs@v2
        id: read_config_yaml
        with:
          file-path: "${{ github.workspace }}/config.yml"

      - id: id_out
        run: |
          echo "version=${{ steps.id_updated_version.outputs.version-number }}" >> $GITHUB_OUTPUT
          echo "web_build_flag=${{ steps.read_config_yaml.outputs.build__web_build_flag }}" >> $GITHUB_OUTPUT
          echo "android_build_flag=${{ steps.read_config_yaml.outputs.build__android_build_flag }}" >> $GITHUB_OUTPUT
          echo "windows_build_flag=${{ steps.read_config_yaml.outputs.build__windows_build_flag }}" >> $GITHUB_OUTPUT

      - name: Get pubspec.yaml version
        uses: actions/download-artifact@v4
        with:
          name: pubspec-file

  build:
    name: Build Apps
    if: github.event.pull_request.draft == false && success()
    uses: ./.github/workflows/_build-env-apps.yml
    needs: [analyze, preBuild]
    secrets: inherit
    with:
      pubspec-filename: "pubspec-file"
      web-build-flag: ${{ needs.preBuild.outputs.web_build_flag == 'true' }}
      web-environment-flag: "release"
      # profile, release
      android-build-flag: ${{ needs.preBuild.outputs.android_build_flag == 'true' }}
      android-environment-flag: "release"
      android-versionNumber: ${{ needs.preBuild.outputs.version_number }}
      android-build-artifact: "android-release"
      windows-build-flag: ${{ needs.preBuild.outputs.windows_build_flag == 'true' }}
      windows-environment-flag: "release"

  post-build:
    name: Post Build
    needs: [build, preBuild]
    runs-on: ubuntu-latest
    concurrency:
      group: post-build-group
      cancel-in-progress: false
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Call Auto Commit Version action
        uses: ./.github/actions/auto-commit-version
        with:
          version_number: ${{ needs.preBuild.outputs.version_number }}
          download_filename: "pubspec-file"
