---
name: Test, Analyze, Build
on:
  push:
    branches:
      - "develop"
  pull_request:
    branches:
      - "develop"
  workflow_run:
    workflows: ["Linting"]
    types:
      - completed
    branches: ["main", "develop"]

  # workflow_dispatch:

jobs:
  test:
    name: Test
    # if: ${{ github.event.workflow_run.conclusion == 'success'}}
    runs-on: ubuntu-latest
    steps:
      - run: echo "The triggering workflow 'Linting' passed and running tests"
      - run: echo "Tests completed."

  analyze:
    name: Analyze
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    needs: test

    permissions:
      contents: read
      packages: read
      statuses: write

    steps:
      - run: echo "Starting analyze"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter
        uses: ./.github/actions/setup-flutter

      # - name: Set up Flutter
      #   uses: subosito/flutter-action@v2
      #   with:
      #     flutter-version: "3.16.x"
      #     channel: "stable"
      #     cache: true

      # - name: Flutter Get Dependencies
      #   run: flutter pub get

      - name: ⚠️ℹ️ Run Dart analysis
        uses: zgosalvez/github-actions-analyze-dart@v3
        with:
          working-directory: "${{github.workspace}}/"

      - name: Super-linter
        uses: super-linter/super-linter@v6.0.0
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IGNORE_GITIGNORED_FILES: true
          FILTER_REGEX_EXCLUDE: "\\.freezed\\.dart$"
          CREATE_LOG_FILE: true
          DISABLE_ERRORS: true

      - run: echo "Analyzing completed."

  pre-build:
    name: Prebuild - Get versioning ready
    runs-on: ubuntu-latest
    outputs:
      version-number: ${{ steps.update-version-action.env.version-number }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update version number and download
        id: update-version-action
        uses: ./.github/actions/app-versioning

      - run: |
          echo "version-number=${{ steps.update-version-action.env.version-number }}" >> $GITHUB_OUTPUT

      - name: Get pubspec.yaml version
        uses: actions/download-artifact@v4
        with:
          name: pubspec-file

  build:
    name: Build Apps
    if: github.event.pull_request.draft == false
    uses: ./.github/workflows/_build-env-apps.yml
    needs: [analyze, pre-build]
    secrets: inherit
    with:
      web-environment-flag: "release"
      # profile, release
      android-environment-flag: "release"
      android-versionNumber: ${{ needs.pre-build.outputs.version-number }}
      windows-environment-flag: "release"

  post-build:
    name: Post Build
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Get pubspec.yaml version
        uses: actions/download-artifact@v4
        with:
          name: pubspec-file
          path: ${{ github.workspace }}/

      - run: |
          echo

      - name: Auto commit new pubspec version
        id: auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: "pubspec.yaml pubspec.yml"

      - name: "Run if changes have been detected"
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        run: echo "Changes!"

      - name: "Run if no changes have been detected"
        if: steps.auto-commit-action.outputs.changes_detected == 'false'
        run: echo "No Changes!"
