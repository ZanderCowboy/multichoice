---
name: Tag and Release
on:
  pull_request:
    branches:
      - "main"
    types:
      - "opened"
      - "synchronize"
      - "reopened"
      - "ready_for_review"
      - "labeled"

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  bumpVersion:
    name: Bump Build Number, Prebuild
    runs-on: ubuntu-latest
    concurrency:
      group: build-group
      cancel-in-progress: false
    outputs:
      version_number: ${{ steps.id_out.outputs.version }}
      version_release: ${{ steps.id_out.outputs.version_rel }}
      web_build_flag: ${{ steps.id_out.outputs.web_build_flag }}
      android_build_flag: ${{ steps.id_out.outputs.android_build_flag }}
      windows_build_flag: ${{ steps.id_out.outputs.windows_build_flag }}
      web_environment_flag: ${{ steps.id_out.outputs.web_environment_flag }}
      android_environment_flag: ${{ steps.id_out.outputs.android_environment_flag }}
      windows_environment_flag: ${{ steps.id_out.outputs.windows_environment_flag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update version number and download
        id: id_unlabeled
        if: join(github.event.pull_request.labels.*.name, '') == ''
        uses: ./.github/actions/app-versioning
        with:
          bump-strategy: "patch"
          file-path: "./apps/multichoice/pubspec.yaml"
          upload-filename: "pubspec-file-release"

      - name: Update patch version number and download
        id: id_patch
        if: ( join(github.event.pull_request.labels.*.name, '') == 'patch' ) || ( github.event.label.name == 'patch' )
        uses: ./.github/actions/app-versioning
        with:
          bump-strategy: "patch"
          file-path: "./apps/multichoice/pubspec.yaml"
          upload-filename: "pubspec-file-release"

      - name: Update minor version number and download
        id: id_minor
        if: ( join(github.event.pull_request.labels.*.name, '') == 'minor' ) || ( github.event.label.name == 'minor' )
        uses: ./.github/actions/app-versioning
        with:
          bump-strategy: "minor"
          file-path: "./apps/multichoice/pubspec.yaml"
          upload-filename: "pubspec-file-release"

      - name: Update major version number and download
        id: id_major
        if: ( join(github.event.pull_request.labels.*.name, '') == 'major' ) || ( github.event.label.name == 'major' )
        uses: ./.github/actions/app-versioning
        with:
          bump-strategy: "major"
          file-path: "./apps/multichoice/pubspec.yaml"
          upload-filename: "pubspec-file-release"

      - name: read-config-file
        uses: actions-tools/yaml-outputs@v2
        id: read_config_yaml
        with:
          file-path: "${{ github.workspace }}/config.yml"

      - id: id_out
        run: |
          if [ "${{ join(github.event.pull_request.labels.*.name, '') }}" == "patch" ]; then
            echo "version=${{ steps.id_patch.outputs.version-number }}" >> $GITHUB_OUTPUT
            version_num=${{ steps.id_patch.outputs.version-number }}
          elif [ "${{ join(github.event.pull_request.labels.*.name, '') }}" == "minor" ]; then
            echo "version=${{ steps.id_minor.outputs.version-number }}" >> $GITHUB_OUTPUT
            version_num=${{ steps.id_minor.outputs.version-number }}  
          elif [ "${{ join(github.event.pull_request.labels.*.name, '') }}" == "major" ]; then
            echo "version=${{ steps.id_major.outputs.version-number }}" >> $GITHUB_OUTPUT
            version_num=${{ steps.id_major.outputs.version-number }}
          else 
            echo "version=${{ steps.id_unlabeled.outputs.version-number }}" >> $GITHUB_OUTPUT
            version_num=${{ steps.id_unlabeled.outputs.version-number }}
          fi

          # echo "version=${{ steps.id_unlabeled.outputs.version-number }}" >> $GITHUB_OUTPUT
          # version_num=${{ steps.id_unlabeled.outputs.version-number }}

          echo "version_number=${version_num}"
          version=$(echo "${version_num}" | sed 's/+.*//')
          echo "version_rel=${version}" >> $GITHUB_OUTPUT

          echo "web_build_flag=${{ steps.read_config_yaml.outputs.build__web_build_flag }}" >> $GITHUB_OUTPUT
          echo "android_build_flag=${{ steps.read_config_yaml.outputs.build__android_build_flag }}" >> $GITHUB_OUTPUT
          echo "windows_build_flag=${{ steps.read_config_yaml.outputs.build__windows_build_flag }}" >> $GITHUB_OUTPUT

          echo "web_environment_flag=${{ steps.read_config_yaml.outputs.environment__web_environment_flag }}" >> $GITHUB_OUTPUT
          echo "android_environment_flag=${{ steps.read_config_yaml.outputs.environment__android_environment_flag }}" >> $GITHUB_OUTPUT
          echo "windows_environment_flag=${{ steps.read_config_yaml.outputs.environment__windows_environment_flag }}" >> $GITHUB_OUTPUT

      - name: Get pubspec.yaml version
        uses: actions/download-artifact@v4
        with:
          name: pubspec-file-release
          path: ${{ github.workspace }}/apps/multichoice/

  buildRelease:
    name: Release Build
    if: github.event.pull_request.draft == false
    uses: ./.github/workflows/_build-env-apps.yml
    needs: [bumpVersion]
    secrets: inherit
    with:
      pubspec_filename: "pubspec-file-release"
      web_build_flag: ${{ needs.bumpVersion.outputs.web_build_flag == 'true' }}
      web_environment_flag: ${{ needs.bumpVersion.outputs.web_environment_flag }}
      android_build_flag: ${{ needs.bumpVersion.outputs.android_build_flag == 'true' }}
      android_environment_flag: ${{ needs.bumpVersion.outputs.android_environment_flag }}
      android_versionNumber: ${{ needs.bumpVersion.outputs.version_number }}
      android_build_artifact: "android-release"
      android_build_appbundle: ${{ 'true' == 'true' }}
      windows_build_flag: ${{ needs.bumpVersion.outputs.windows_build_flag == 'true' }}
      windows_environment_flag: ${{ needs.bumpVersion.outputs.windows_environment_flag }}

  commitBump:
    name: Auto Commit Bumped Version
    needs: [bumpVersion, buildRelease]
    if: success()
    runs-on: ubuntu-latest
    concurrency:
      group: post-build-group
      cancel-in-progress: false
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - id: id_version
        run: |
          echo "version=${{ needs.bumpVersion.outputs.version_release }}" >> $GITHUB_ENV

      - name: Call Auto Commit Version action
        uses: ./.github/actions/auto-commit-version
        with:
          version_number: "${{ env.version }}"
          download_filename: "pubspec-file-release"

  tagAndRelease:
    name: Git Tagging, Release
    needs: [commitBump, bumpVersion]
    if: github.event.pull_request.draft == false && success()
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: read-config-file
        uses: actions-tools/yaml-outputs@v2
        id: read_config_yaml
        with:
          file-path: "${{ github.workspace }}/config.yml"

      - id: id_version
        run: |
          echo "version=${{ needs.bumpVersion.outputs.version_release }}" >> $GITHUB_ENV

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "v${{ env.version }}"
          message: "Release ${{ env.version }}"

      - name: Create GitHub release
        if: success() && ${{ steps.tag_create.outputs.tag_exists == false}}
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ env.version }}"
          name: "v${{ env.version }}"
          body: ${{ steps.read_config_yaml.outputs.release__body }}
          draft: ${{ steps.read_config_yaml.outputs.release__draft == 'true' }}
          prerelease: ${{ steps.read_config_yaml.outputs.release__prerelease == 'true' }}
          generateReleaseNotes: ${{ steps.read_config_yaml.outputs.release__generateReleaseNotes == 'true' }}
