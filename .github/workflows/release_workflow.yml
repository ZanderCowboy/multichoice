---
name: Deploy Apps
on:
  pull_request:
    branches:
      - "develop" # change back to main
    types:
      - "opened"
      - "synchronize"
      - "reopened"
      - "ready_for_review"

  workflow_dispatch:

jobs:
  # bump
  bumpVersion:
    name: Bump build number
    runs-on: ubuntu-latest
    outputs:
      version_number: ${{ steps.id_out.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update version number and download
        id: id_updated_version
        uses: ./.github/actions/app-versioning
        with:
          bump-strategy: "minor"
          file-path: "./pubspec.yaml"
          upload-filename: "pubspec-file-release"

      - id: id_out
        run: |
          echo "version=${{ steps.id_updated_version.outputs.version-number }}" >> $GITHUB_OUTPUT

      - name: Get pubspec.yaml version
        uses: actions/download-artifact@v4
        with:
          name: pubspec-file-release

  # build
  build:
    name: Build Apps
    if: github.event.pull_request.draft == false
    uses: ./.github/workflows/_build-env-apps.yml
    needs: [bumpVersion]
    secrets: inherit
    with:
      web-build-flag: true
      web-environment-flag: "release"
      # profile, release
      android-build-flag: true
      android-environment-flag: "release"
      android-versionNumber: ${{ needs.bumpVersion.outputs.version_number }}
      windows-build-flag: true
      windows-environment-flag: "release"

  # commit
  commitBump:
    name: Auto Commit Bumped Version
    needs: [build]
    if: success()
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Call Auto Commit Version action
        uses: ./.github/actions/auto-commit-version
        with:
          version_number: ${{ needs.bumpVersion.outputs.version_number }}
          download_filename: "pubspec-file-release"

  # tag
  # release
  tagAndRelease:
    name: Git tagging and releases
    if: github.event.pull_request.draft == false && success()
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # with:
        #   fetch-depth: 0

      # - name: Update version for release
      #   id: id_update_pubspec_release
      #   uses: ./.github/actions/app-versioning
      #   with:
      #     bump-strategy: "minor"
      #     bump-build: "true"
      #     file-path: "./pubspec.yaml"
      #     upload-filename: "pubspec-file-release"

      # - name: Commit new changes for release
      #   uses: ./.github/actions/auto-commit-version
      #   with:
      #     # version_number: ${{ steps.id_update_pubspec_release.outputs.version-number }}
      #     version_number: ${{ needs.bumpVersion.outputs.version_number }}
      #     download_filename: "pubspec-file-release"

      # step to check for previous tags

      - name: Create tag
        if: success()
        uses: rickstaa/action-create-tag@v1
        with:
          # tag: "v${{ steps.id_update_pubspec_release.outputs.version-number }}"
          tag: "v${{ needs.bumpVersion.outputs.version_number }}"
          # message: "Release ${{ steps.id_update_pubspec_release.outputs.version-number }}"
          message: "Release ${{ needs.bumpVersion.outputs.version_number }}"

      - name: Create GitHub release
        if: success() && ${{ steps.tag_create.outputs.tag_exists == false}}
        uses: ncipollo/release-action@v1
        with:
          # tag: v${{ steps.id_update_pubspec_release.outputs.version-number }}
          tag: v${{ needs.bumpVersion.outputs.version_number }}
          # name: Release v${{ steps.id_update_pubspec_release.outputs.version-number }}
          name: Release v${{ needs.bumpVersion.outputs.version_number }}
          body: Release notes here
          draft: true
          prerelease: true
          generateReleaseNotes: true
