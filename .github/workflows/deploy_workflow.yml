---
name: Release and Deploy
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_run:
    workflows: ["Test, Analyze, Build"]
    types:
      - "completed"
    branches:
      - ["main", "develop"]

  # workflow_dispatch:

jobs:
  tagAndRelease:
    name: Git tagging and releases
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update version for release
        id: id_update_pubspec_release
        uses: ./.github/actions/app-versioning
        with:
          bump-strategy: "minor"
          file-path: "./pubspec.yaml"
          upload-filename: "pubspec-file-release"

      # - name: Update pubspec version for release
      #   id: update_pubspec_release
      #   uses: stikkyapp/update-pubspec-version@v1
      #   with:
      #     strategy: "minor"
      #     path: "./pubspec.yaml"

      # - name: Update version in pubspec.yaml
      #   run: |
      #     sed -Ei "s/^version: 99.99.99+999/version: ${{ steps.update_pubspec_release.outputs.new-version }}/g" pubspec.yaml

      # # All this can be transformed into an action
      # - name: Upload pubspec.yaml
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: pubspec-file-release
      #     path: pubspec.yaml

      - name: Commit new changes for release
        uses: ./.github/actions/auto-commit-version
        with:
          version_number: ${{ steps.id_update_pubspec_release.outputs.version_number }}
          download-filename: "pubspec-file-release"

      # - name: Get pubspec.yaml version
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: pubspec-file-release
      #     path: ${{ github.workspace }}/

      # - name: Auto commit new pubspec version
      #   id: auto-commit-action
      #   uses: stefanzweifel/git-auto-commit-action@v5
      #   with:
      #     commit_message: "Bump pubspec version to '${{ steps.update_pubspec_release.outputs.version_number }}'"
      #     file_pattern: "pubspec.*"

      # - name: "Run if changes have been detected"
      #   if: steps.auto-commit-action.outputs.changes_detected == 'true'
      #   run: echo "Changes!"

      # - name: "Run if no changes have been detected"
      #   if: steps.auto-commit-action.outputs.changes_detected == 'false'
      #   run: echo "No Changes!"
      # All this up to here

      # step to check for previous tags

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "v${{ steps.id_update_pubspec_release.outputs.new_version }}"
          message: "Release ${{ steps.id_update_pubspec_release.outputs.new_version }}"

      - name: Create GitHub release
        if: ${{ steps.tag_create.outputs.tag_exists == false}}
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.id_update_pubspec_release.outputs.new_version }}
          name: Release v${{ steps.id_update_pubspec_release.outputs.new_version }}
          body: Release notes here
          draft: true
          prerelease: true
          generateReleaseNotes: true
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - run: |
      #     # Tag the release
      #     git tag v${{ github.run_number }}
      #     git push origin v${{ github.run_number }}

  predeploy:
    name: Setting up for Deploy
    # if: ${{ github.event.workflow_run.conclusion == 'success'}} && ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: |
          echo "${{ github.head_ref }}"
          echo "${{ github.ref == 'refs/heads/main' }}"
          echo "${{ github.ref }}"

      # - name: üëÅÔ∏è Check branch validity
      #   if: ${{ github.head_ref }} != 'refs/heads/main'
      #   run: |
      #     echo "‚ö†Ô∏è Error: you tried to create a release from '${{ github.ref }}' branch but production releases can only be created from 'main' branch"

      - name: Job Finished
        run: echo "Predeploy Job Finished"

      - name: "Echo commands"
        run: |
          echo "${{ github.head_ref }}"
          echo "${{ github.ref == 'refs/heads/main' }}"
          echo "${{ github.ref }}"

  deploy:
    name: Deploy Apps
    if: github.event.pull_request.draft == false && ${{ github.ref == 'refs/heads/main' }}
    uses: ./.github/workflows/_deploy-env-apps.yml
    needs: predeploy
    permissions:
      contents: write
    secrets: inherit
    with:
      web-environment-flag: "Web Prod"
      android-environment-flag: "Android Prod"
      android-package-name: "co.za.zanderkotze.multichoice"
      android-track: "alpha"
      android-release-name: "v1.0.0"
      android-deploy-status: "draft"
      windows-environment-flag: "Windows Prod"
